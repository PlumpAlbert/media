# vim:ft=yaml.docker-compose
version: "3"

networks:
  internal:
    ipam:
      driver: default
      config:
        - subnet: 10.5.0.0/24
          ip_range: 10.5.0.0/24
          gateway: 10.5.0.1
  proxy:
    name: "${NGINX_PROXY_NETWORK_NAME}"
    external: true

volumes:
  vpn_data:
  radarr_data:
  prowlarr_data:
  sonarr_data:
  tdarr_data:
  bazarr_data:
  overseerr_data:
  torrent_data:
  plex_data:
  tautulli_data:
  plex_cleaner_data:

services:
  vpn:
    container_name: vpn
    image: qmcgaw/gluetun:latest
    restart: unless-stopped
    networks:
      proxy:
      internal:
        ipv4_address: 10.5.0.2
    cap_add:
      - NET_ADMIN
    volumes:
      - vpn_data:/gluetun
    env_file:
      - stack.env
    ports:
      - "${HTTP_PROXY_PORT}:8888"
      - "${SHADOWSOCKS_PORT}:8388"

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    restart: unless-stopped
    depends_on:
      - vpn
      - torrent
      - prowlarr
    network_mode: 'service:vpn'
    env_file:
      - stack.env
    volumes:
      - radarr_data:/config
      - ${MEDIA}:/data

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    restart: unless-stopped
    network_mode: 'service:vpn'
    depends_on:
      - vpn
      - torrent
    env_file:
      - stack.env
    volumes:
      - prowlarr_data:/config

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: 'service:vpn'
    depends_on:
      - vpn
      - torrent
      - prowlarr
    env_file:
      - stack.env
    volumes:
      - sonarr_data:/config
      - ${MEDIA}:/data

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    restart: unless-stopped
    network_mode: 'service:vpn'
    depends_on:
      - vpn
      - radarr
      - sonarr
    env_file:
      - stack.env
    volumes:
      - bazarr_data:/config
      - ${MEDIA}:/data

  tdarr:
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    network_mode: 'service:vpn'
    depends_on:
      - vpn
      - sonarr
      - radarr
    environment:
      UMASK_SET: 002
      serverIP: 0.0.0.0
      serverPort: 8265
      webUIPort: 8266
      internalNode: true
      inContainer: true
      ffmpegVersion: 6
      nodeName: InternalNode
    env_file:
      - stack.env
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - tdarr_data:/app
      - /tmp:/temp
      - ${MEDIA}:/media

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    restart: unless-stopped
    network_mode: 'service:vpn'
    depends_on:
      - vpn
      - sonarr
      - radarr
      - plex
      - tautulli
    volumes:
      - overseerr_data:/config

  torrent:
    image: lscr.io/linuxserver/deluge:latest
    restart: unless-stopped
    networks:
      proxy:
      internal:
        ipv4_address: 10.5.0.3
    env_file:
      - stack.env
    volumes:
      - torrent_data:/config
      - ${MEDIA}/downloads:/downloads
      - ${MEDIA}/torrents:/torrents

  plex:
    image: lscr.io/linuxserver/plex:latest
    restart: unless-stopped
    env_file:
      - stack.env
    network_mode: 'host'
    volumes:
      - plex_data:/config
      - ${MEDIA}/series:/tv
      - ${MEDIA}/movies:/movies
    devices:
      - "/dev/dri:/dev/dri"

  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    restart: unless-stopped
    depends_on:
      - plex
    env_file:
      - stack.env
    networks:
      proxy:
      internal:
        ipv4_address: 10.5.0.4
    volumes:
      - tautulli_data:/config

  plex_cleaner:
    image: nitrikx/plex-cleaner
    restart: always
    depends_on:
      - plex
    networks:
      internal:
        ipv4_address: 10.5.0.5
    environment:
      EXECUTION_CRON_EXPRESSION: "0 0 * * *"
    volumes:
      - plex_cleaner_data:/config
      - ${MEDIA}:/plexdata

